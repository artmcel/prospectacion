/*
   * Global function to click 'Cancel' button
   */

/*
   * Global function to click 'Confirm' button
   */

/*
   * Global function to click 'Deny' button
   */

/*
   * Global function to determine if SweetAlert2 popup is shown
   */

/*
   * Instance method to close sweetAlert
   */

/* 'confirm' | 'deny' */

/* istanbul ignore if */

/*#__PURE__*/

/**
   * @param {NodeList | HTMLCollection | NamedNodeMap} nodeList
   * @returns {array}
   */

/**
   * Filter the unique values into a new array
   * @param arr
   */

/**
   * Gets the input DOM node, this method works with input parameter.
   * @returns {HTMLElement | null}
   */

/**
   * Hides loader and shows back the button which was hidden by .showLoading()
   */

/**
   * If `timer` parameter is set, returns number of milliseconds of timer remained.
   * Otherwise, returns undefined.
   */

/**
   * Returns an extended version of `Swal` containing `params` as defaults.
   * Useful for reusing Swal configuration.
   *
   * For example:
   *
   * Before:
   * const textPromptOptions = { input: 'text', showCancelButton: true }
   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })
   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })
   *
   * After:
   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })
   * const {value: firstName} = await TextPrompt('What is your first name?')
   * const {value: lastName} = await TextPrompt('What is your last name?')
   *
   * @param mixinParams
   */

/**
   * Set type, text and actions on popup
   *
   * @param params
   */

/**
   * Standardize console warnings
   * @param {string | array} message
   */

/**
   * Stop timer. Returns number of milliseconds of timer remained.
   * If `timer` parameter isn't set, returns undefined.
   */

/**
   * This module contains `WeakMap`s for each effectively-"private  property" that a `Swal` has.
   * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
   * This is the approach that Babel will probably take to implement private methods/fields
   *   https://github.com/tc39/proposal-private-methods
   *   https://github.com/babel/babel/pull/7555
   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
   *   then we can use that language feature.
   */

/**
   * Updates popup parameters.
   */

/** @type {DocumentFragment} */

/** @type {HTMLElement} */

/** @type {HTMLInputElement} */

/***/

//

// "...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)..."

// #1603

// #1944

// 10ms in order to fix #2062

// <optgroup> spec:

// @ts-ignore

// A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335

// ARIA label

// Actions (buttons) wrapper

// Add buttons custom classes

// Animate icon

// Animate popup right after showing it

// Arnold is loved in Russia by all people including those who are for this war

// Assign instance methods from src/instanceMethods/*.js to prototype

// Assign static methods from src/staticMethods/*.js to constructor

// Background

// Buttons background colors

// Check if there is a swal disposal defer timer

// Check if there is another Swal closing

// Chrome, Safari and Opera

// Class

// Classes

// Clean up the old popup container if it exists

// Closing toast by internal click

// Color

// Content as HTML

// Custom class

// Custom or default content

// Cycle to the next button

// DOM element

// Default Class + showClass when updating Swal.update({})

// Determine if the custom target element is valid

// ENTER

// Hide block with validation message

// His speech might change the mind of those who are brainwashed by propaganda

// Icon class (#1842)

// Icon color

// If animation is supported, animate

// If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335

// Ignore click events that had mousedown on the container but mouseup on the popup

// Ignore click events that had mousedown on the popup but mouseup on the container

// Ignore keydown during IME composition

// In this video Igor Girkin, who played a key role in the annexation of Crimea,

// In this video one of the most famous Russian nationalist leaders, Dmitry Demushkin,

// JQuery element(s)

// Loader

// Otherwise, remove immediately

// Padding

// Prevent run in Node env

// Proxy to instance methods to constructor, for now, for backwards compatibility

// Reject Swal promise

// Render all the buttons

// Render buttons

// Replace newlines with <br> in title

// Resolve Swal promise

// Scroll container to top on open (#1247, #1946)

// Set caption text

// Src, alt

// Success icon background color

// The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335

// The message will only be shown to Russian users visiting Russian sites

// The point is to wrap the truth-bomb into a patriotic title so they will actually click it

// This can happen when the user drags a slider

// This message is targeted at people who are corrupted by propaganda, everybody else

// Unset currentInstance

// Unset globalState props so GC will dispose globalState (#1569)

// Unset this.params so GC will dispose it (#1569)

// Use default `inputValidator` for supported input types if not provided

// We also need to check if the mouseup target is a child of the popup

// We only check if the mouseup target is the container because usually it doesn't

// When user calls Swal.close()

// Width

// Width, height

// `catch` cannot be the name of a module export, so we define our thenable methods here instead

// add padding so the content doesn't shift after removal of scrollbar

// and listen to the uncomfortable truth about the war from the people they love or respect.

// and remove the opacity workaround

// borrowed from https://stackoverflow.com/a/46352119

// case of <optgroup>

// case of <option>

// check whether this is a <optgroup>

// clear the previous timer

// clear the restore focus timeout

// do not submit

// do nothing if popup is closed

// eslint-disable-line @typescript-eslint/no-this-alias

// explains that this war has failed already and all possible outcomes are bad for Russia.

// explains that this war has no sense and produces the exact opposite result of what

// for queues, do not do this more than once

// for some reason removing the container in Safari will scroll the document to bottom

// functions to handle all closings/dismissals

// have any other direct children aside of the popup

// http://stackoverflow.com/a/2345915

// https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition

// https://github.com/jkup/focusable/blob/master/index.js

// https://github.com/sweetalert2/sweetalert2/issues/1699

// https://github.com/sweetalert2/sweetalert2/issues/2170

// https://github.com/sweetalert2/sweetalert2/issues/2291

// https://github.com/sweetalert2/sweetalert2/issues/2386

// https://github.com/sweetalert2/sweetalert2/issues/2406

// https://github.com/sweetalert2/sweetalert2/issues/720

// https://www.w3.org/TR/html401/interact/forms.html#h-17.6

// if it is an array, then it is an <optgroup>

// if the body has overflow

// if the given icon already rendered, apply the styling without re-rendering the icon

// input autofocus

// is already against war either silently or actively.

// issues/900

// it was intended to do.

// no visible focusable elements, focus the popup

// not configurable for now

// place cursor at end of text in text input

// precedence is described in #2131

// rollover to first item

// scrolling is 'hidden' until animation is done, after that 'auto'

// search for visible elements and select the next possible match

// set attributes

// set class

// set custom class

// showLoaderOnConfirm && preConfirm

// sweetalert2/issues/1247

// this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059

// timer can be already stopped or unset at this point

// workaround for #2088
